pipeline {
    agent any

    environment {
        AWS_ACCOUNT_ID = '609862927287'
        AWS_REGION = 'us-east-1'
        ECR_REPO = 'currency-exchange-app'
        IMAGE_TAG = "${BUILD_NUMBER}"
        DOCKER_IMAGE = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}:${IMAGE_TAG}"
    }

    stages {
        stage('Maven Build') {
            steps {
                dir('currency-exchange-sample-service') {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Unit Tests') {
            steps {
                dir('currency-exchange-sample-service') {
                    sh 'mvn test'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                dir('currency-exchange-sample-service') {
                    withSonarQubeEnv('SonarQube') {
                        withCredentials([string(credentialsId: '8c2cad5d-f9f8-4c40-add7-f22eb79e7204', variable: 'SONAR_TOKEN')]) {
                            sh 'mvn sonar:sonar -Dsonar.login=$SONAR_TOKEN'
                        }
                    }
                }
            }
        }

        stage('Docker Build & Tag') {
            steps {
                dir('currency-exchange-sample-service') {
                    sh '''
                        docker build -t currency-exchange-app:latest .
                        docker tag currency-exchange-app:latest ${DOCKER_IMAGE}
                    '''
                }
            }
        }

        stage('Trivy Scan') {
            steps {
                dir('currency-exchange-sample-service') {
                    sh 'trivy image --exit-code 0 --severity CRITICAL ${DOCKER_IMAGE}'
                }
            }
        }

        stage('ECR Login') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-ecr']]) {
                    sh '''
                        aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
                    '''
                }
            }
        }

        stage('Push to ECR') {
            steps {
                sh 'docker push ${DOCKER_IMAGE}'
            }
        }
    }
    post {
        failure {
            echo 'Pipeline failed. Sending notifications...'
        }
    }
}
